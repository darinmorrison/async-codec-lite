var searchIndex = JSON.parse('{\
"async_codec_lite":{"doc":"","i":[[3,"Bytes","async_codec_lite","A cheaply cloneable and sliceable chunk of contiguous â€¦",null,null],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",null,null],[3,"BytesCodec","","",null,null],[3,"LengthCodec","","",null,null],[3,"OverflowError","","",null,null],[8,"DecoderWithSkipAhead","","",null,null],[16,"Handler","","",0,null],[10,"prepare_skip_ahead","","",0,[[["bytesmut",3]]]],[3,"LimitCodec","","",null,null],[4,"LimitError","","",null,null],[13,"LimitExceeded","","",1,null],[13,"Defunct","","",1,null],[13,"Inner","","",1,null],[8,"SkipAheadHandler","","",null,null],[10,"continue_skipping","","",2,[[],["result",4]]],[3,"LinesCodec","","",null,null],[3,"CborCodec","","",null,null],[3,"JsonCodec","","",null,null],[8,"Decoder","","",null,null],[16,"Item","","",3,null],[16,"Error","","",3,null],[10,"decode","","",3,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"decode_eof","","",3,[[["bytesmut",3]],[["result",4],["option",4]]]],[8,"Encoder","","",null,null],[16,"Item","","",4,null],[16,"Error","","",4,null],[10,"encode","","",4,[[["bytesmut",3]],["result",4]]],[3,"Framed","","",null,null],[3,"FramedParts","","",null,null],[12,"io","","",5,null],[12,"codec","","",5,null],[12,"read_buf","","",5,null],[12,"write_buf","","",5,null],[3,"FramedRead","","",null,null],[3,"FramedWrite","","",null,null],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"try_poll_next","","",15,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"try_poll_next","","",16,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"try_poll_next","","",17,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"default","","",7,[[],["bytesmut",3]]],[11,"default","","",6,[[],["bytes",3]]],[11,"as_mut","","",7,[[]]],[11,"as_ref","","",7,[[]]],[11,"as_ref","","",6,[[]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"remaining","","",7,[[]]],[11,"chunk","","",7,[[]]],[11,"advance","","",7,[[]]],[11,"copy_to_bytes","","",7,[[],["bytes",3]]],[11,"remaining","","",6,[[]]],[11,"chunk","","",6,[[]]],[11,"advance","","",6,[[]]],[11,"copy_to_bytes","","",6,[[],["bytes",3]]],[11,"drop","","",6,[[]]],[11,"drop","","",7,[[]]],[11,"clone","","",7,[[],["bytesmut",3]]],[11,"clone","","",6,[[],["bytes",3]]],[11,"partial_cmp","","",6,[[["bytes",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",6,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",7,[[["bytesmut",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",7,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",7,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",6,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",6,[[["string",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",7,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",6,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",7,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",6,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",7,[[["string",3]],[["option",4],["ordering",4]]]],[11,"into_iter","","",7,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow","","",7,[[]]],[11,"eq","","",7,[[["vec",3]]]],[11,"eq","","",7,[[]]],[11,"eq","","",6,[[]]],[11,"eq","","",6,[[]]],[11,"eq","","",6,[[["string",3]]]],[11,"eq","","",6,[[["bytesmut",3]]]],[11,"eq","","",6,[[["vec",3]]]],[11,"eq","","",7,[[]]],[11,"eq","","",6,[[["bytes",3]]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[["string",3]]]],[11,"eq","","",7,[[["bytes",3]]]],[11,"eq","","",6,[[]]],[11,"eq","","",7,[[["bytesmut",3]]]],[11,"from","","",6,[[],["bytes",3]]],[11,"from","","",6,[[],["bytes",3]]],[11,"from","","",6,[[["bytesmut",3]],["bytes",3]]],[11,"from","","",7,[[],["bytesmut",3]]],[11,"from","","",6,[[["string",3]],["bytes",3]]],[11,"from","","",6,[[["vec",3],["global",3]],["bytes",3]]],[11,"from","","",7,[[],["bytesmut",3]]],[11,"deref","","",7,[[]]],[11,"deref","","",6,[[]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from_iter","","",7,[[],["bytesmut",3]]],[11,"from_iter","","",7,[[],["bytesmut",3]]],[11,"from_iter","","",6,[[],["bytes",3]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"remaining_mut","","",7,[[]]],[11,"advance_mut","","",7,[[]]],[11,"chunk_mut","","",7,[[],["uninitslice",3]]],[11,"put","","",7,[[]]],[11,"put_slice","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"write_str","","",7,[[],[["result",4],["error",3]]]],[11,"write_fmt","","",7,[[["arguments",3]],[["result",4],["error",3]]]],[11,"cmp","","",6,[[["bytes",3]],["ordering",4]]],[11,"cmp","","",7,[[["bytesmut",3]],["ordering",4]]],[11,"extend","","",7,[[]]],[11,"extend","","",7,[[]]],[11,"decode","","",8,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"decode","","",9,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"decode","","",11,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"decode","","",12,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"decode","","",13,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"decode","","",14,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"encode","","",8,[[["bytesmut",3]],["result",4]]],[11,"encode","","",9,[[["bytesmut",3]],["result",4]]],[11,"encode","","",11,[[["bytesmut",3]],["result",4]]],[11,"encode","","",12,[[["bytesmut",3]],["result",4]]],[11,"encode","","",13,[[["bytesmut",3]],["result",4]]],[11,"encode","","",14,[[["bytesmut",3]],["result",4]]],[11,"from","","",1,[[]]],[11,"clone","","",8,[[],["bytescodec",3]]],[11,"clone","","",9,[[]]],[11,"clone","","",12,[[],["linescodec",3]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"default","","",8,[[],["bytescodec",3]]],[11,"default","","",9,[[]]],[11,"default","","",12,[[],["linescodec",3]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"eq","","",8,[[["bytescodec",3]]]],[11,"eq","","",9,[[]]],[11,"eq","","",12,[[["linescodec",3]]]],[11,"eq","","",13,[[]]],[11,"eq","","",14,[[]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"source","","",1,[[],[["option",4],["error",8]]]],[11,"poll_next","","",15,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",16,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",17,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_ready","","",15,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",15,[[["pin",3]],["result",4]]],[11,"poll_flush","","",15,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",15,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",16,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",16,[[["pin",3]],["result",4]]],[11,"poll_flush","","",16,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",16,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",17,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",17,[[["pin",3]],["result",4]]],[11,"poll_flush","","",17,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",17,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"new","","Creates a new empty <code>Bytes</code>.",6,[[],["bytes",3]]],[11,"from_static","","Creates a new <code>Bytes</code> from a static slice.",6,[[],["bytes",3]]],[11,"len","","Returns the number of bytes contained in this <code>Bytes</code>.",6,[[]]],[11,"is_empty","","Returns true if the <code>Bytes</code> has a length of 0.",6,[[]]],[11,"copy_from_slice","","Creates <code>Bytes</code> instance from slice, by copying it.",6,[[],["bytes",3]]],[11,"slice","","Returns a slice of self for the provided range.",6,[[],["bytes",3]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given â€¦",6,[[],["bytes",3]]],[11,"split_off","","Splits the bytes into two at the given index.",6,[[],["bytes",3]]],[11,"split_to","","Splits the bytes into two at the given index.",6,[[],["bytes",3]]],[11,"truncate","","Shortens the buffer, keeping the first <code>len</code> bytes and â€¦",6,[[]]],[11,"clear","","Clears the buffer, removing all data.",6,[[]]],[11,"with_capacity","","Creates a new <code>BytesMut</code> with the specified capacity.",7,[[],["bytesmut",3]]],[11,"new","","Creates a new <code>BytesMut</code> with default capacity.",7,[[],["bytesmut",3]]],[11,"len","","Returns the number of bytes contained in this <code>BytesMut</code>.",7,[[]]],[11,"is_empty","","Returns true if the <code>BytesMut</code> has a length of 0.",7,[[]]],[11,"capacity","","Returns the number of bytes the <code>BytesMut</code> can hold without â€¦",7,[[]]],[11,"freeze","","Converts <code>self</code> into an immutable <code>Bytes</code>.",7,[[],["bytes",3]]],[11,"split_off","","Splits the bytes into two at the given index.",7,[[],["bytesmut",3]]],[11,"split","","Removes the bytes from the current view, returning them â€¦",7,[[],["bytesmut",3]]],[11,"split_to","","Splits the buffer into two at the given index.",7,[[],["bytesmut",3]]],[11,"truncate","","Shortens the buffer, keeping the first <code>len</code> bytes and â€¦",7,[[]]],[11,"clear","","Clears the buffer, removing all data.",7,[[]]],[11,"resize","","Resizes the buffer so that <code>len</code> is equal to <code>new_len</code>.",7,[[]]],[11,"set_len","","Sets the length of the buffer.",7,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more bytes to â€¦",7,[[]]],[11,"extend_from_slice","","Appends given bytes to this <code>BytesMut</code>.",7,[[]]],[11,"unsplit","","Absorbs a <code>BytesMut</code> that was previously split off.",7,[[["bytesmut",3]]]],[11,"new","","",9,[[]]],[11,"new","","",11,[[]]],[11,"new","","",13,[[]]],[11,"new","","",14,[[]]],[11,"decode_eof","","",3,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"new","","",15,[[],["framedread",3]]],[11,"with_capacity","","",15,[[],["framedread",3]]],[11,"get_ref","","",15,[[]]],[11,"get_mut","","",15,[[]]],[11,"get_pin_mut","","",15,[[["pin",3]],["pin",3]]],[11,"into_inner","","",15,[[]]],[11,"decoder","","",15,[[]]],[11,"decoder_mut","","",15,[[]]],[11,"read_buffer","","",15,[[],["bytesmut",3]]],[11,"read_buffer_mut","","",15,[[],["bytesmut",3]]],[11,"new","","",16,[[],["framedwrite",3]]],[11,"get_ref","","",16,[[]]],[11,"get_mut","","",16,[[]]],[11,"get_pin_mut","","",16,[[["pin",3]],["pin",3]]],[11,"into_inner","","",16,[[]]],[11,"encoder","","",16,[[]]],[11,"encoder_mut","","",16,[[]]],[11,"new","","",17,[[],["framed",3]]],[11,"with_capacity","","",17,[[],["framed",3]]],[11,"from_parts","","",17,[[["framedparts",3]],["framed",3]]],[11,"get_ref","","",17,[[]]],[11,"get_mut","","",17,[[]]],[11,"get_pin_mut","","",17,[[["pin",3]],["pin",3]]],[11,"codec","","",17,[[]]],[11,"codec_mut","","",17,[[]]],[11,"read_buffer","","",17,[[],["bytesmut",3]]],[11,"read_buffer_mut","","",17,[[],["bytesmut",3]]],[11,"into_inner","","",17,[[]]],[11,"into_parts","","",17,[[],["framedparts",3]]],[11,"new","","",5,[[],["framedparts",3]]]],"p":[[8,"DecoderWithSkipAhead"],[4,"LimitError"],[8,"SkipAheadHandler"],[8,"Decoder"],[8,"Encoder"],[3,"FramedParts"],[3,"Bytes"],[3,"BytesMut"],[3,"BytesCodec"],[3,"LengthCodec"],[3,"OverflowError"],[3,"LimitCodec"],[3,"LinesCodec"],[3,"CborCodec"],[3,"JsonCodec"],[3,"FramedRead"],[3,"FramedWrite"],[3,"Framed"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);